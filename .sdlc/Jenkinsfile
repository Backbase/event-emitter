#!/usr/bin/env groovy

@Library('jenkins-shared-library@latest') l1

pipeline {

    triggers {
        pollSCM('')
    }

    agent {
        kubernetes {
            inheritFrom "kaniko"
        }
    }

    options {
        disableConcurrentBuilds()
        timeout(time: 30, unit: 'MINUTES')
    }

    environment {
        HARBOR_CREDS = credentials("harbor-credentials")
        HARBOR_DEVELOPMENT = "development"
        HARBOR_INTERNAL = "internal"
    }

    stages {

        stage('Initialize') {
            steps {
                script {
                    ciSCMCheckout()
                    metadata = readYaml(file: '.sdlc/config.yaml')
                    pom = readMavenPom(file: 'pom.xml')
                    POM_VERSION = pom.version.replace("-SNAPSHOT", "")
                    JAVA17_TAG = "${pom.version}-java17";
                }
            }
        }

        stage('Download dependencies') {
            steps {
                withMaven(maven: MVN_VERSION, mavenSettingsConfig: SETTINGS_ID) {
                    sh "mvn -T 4C -B dependency:copy-dependencies dependency:resolve-plugins"
                }
            }
        }

        stage('Build and push docker image') {
            steps {
                script {
                    if (env.BRANCH_NAME ==~ /(main)/) {
                        echo("Event-emitter pushing to ${HARBOR_INTERNAL} with tag: ${POM_VERSION}")
                        withMaven(maven: 'maven 3.8.1', mavenSettingsConfig: SETTINGS_ID, jdk: 'jdk-17') {
                            sh """
                                mvn package -Dmaven.test.skip.exec=true -P docker-image -Ddocker.repo.project=${HARBOR_INTERNAL} -Djib.to.auth.username=${HARBOR_CREDS_USR} -Djib.to.auth.password=${HARBOR_CREDS_PSW} -Ddocker.distroless.image=gcr.io/distroless/java17-debian11 -Ddocker.default.tag=${POM_VERSION} -Djib.to.tags=${GIT_COMMIT}-java17
                            """
                        }
                    } else {
                        echo("Event-emitter pushing to ${HARBOR_DEVELOPMENT} with tag: ${POM_VERSION}")
                        withMaven(maven: 'maven 3.8.1', mavenSettingsConfig: SETTINGS_ID, jdk: 'jdk-17') {
                            sh """
                                mvn package -Dmaven.test.skip.exec=true -P docker-image -Ddocker.repo.project=${HARBOR_DEVELOPMENT} -Djib.to.auth.username=${HARBOR_CREDS_USR} -Djib.to.auth.password=${HARBOR_CREDS_PSW} -Ddocker.distroless.image=gcr.io/distroless/java17-debian11 -Ddocker.default.tag=${POM_VERSION} -Djib.to.tags=${GIT_COMMIT}-java17
                            """
                        }
                    }
                }
            }
        }
    }

    post {
        failure {
            slackSend channel: "${metadata.slack}", color: 'bad', message: "${env.JOB_NAME} has failed: ${env.BUILD_URL}"
        }
    }
}